// 11.1 원시 값
// (상수가 아니고 변수로 선언했다고 가정)
// (1) 변경 불가능(재할당과 다른 개념)
// 재할당 외에는 변수 값을 변경할 수 없음 -> 메모리 공간의 주소 변경(재할당)
// 예 : 문자열(하나당 2바이트)은 객체처럼 접근 가능. 하지만 일부 문자 변경 불가(원시타입)
// var str = "string";
// str[0] = "S";
// console.log(str);
// (2) 값에 의한 전달 : 값에 복사되어 다른 메모리 공간에 저장 p.143
// 할당하는 변수의 값이 변경되도 할당되는 변수의 값에는 영향이 없다.

// 11.2 객체
// (상수가 아니고 변수로 선언했다고 가정)
// (0) 메모리 공간의 크기를 사전에 정해둘 수 없음
// (1) 변경 가능한 값 p.148 : 변수가 가리키는 주소에는 '객체'가 아니라 '객체에 접근할 수 있는 참조값(메모리 주소)이 들어있음
// - 메모리 공간의 효율성을 위해 그렇게 한다고 함
// (2) 참조에 의한 전달(공유에 의한 전달)
// 이를 복사한 변수(사본)는 객체 값을 가리키는 게 아니라, 객체 값의 참조 값이 복사됨 -> 그러므로 영향 받음
// p.151
// 참고 : 얕은 복사 vs 깊은 복사
